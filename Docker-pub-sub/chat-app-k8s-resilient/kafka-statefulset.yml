apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: kafka-demo
spec:
  serviceName: kafka
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: bitnami/kafka:3.7  # Versão específica para maior previsibilidade
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 9092
            name: broker
        env:
          - name: KAFKA_CFG_ZOOKEEPER_CONNECT
            value: zookeeper-0.zookeeper:2181,zookeeper-1.zookeeper:2181
          - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
            value: PLAINTEXT:PLAINTEXT
          - name: KAFKA_CFG_LISTENERS
            value: PLAINTEXT://:9092
#          - name: KAFKA_CFG_ADVERTISED_LISTENERS
#            value: PLAINTEXT://$(POD_NAME).kafka.kafka-demo.svc.cluster.local:9092
          - name: KAFKA_CFG_BROKER_ID
            value: "-1"  # Geração automática do broker.id
          - name: KAFKA_CFG_NUM_PARTITIONS
            value: "3"
          - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
            value: "3"
          - name: ALLOW_PLAINTEXT_LISTENER
            value: "yes"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        command:
          - /bin/bash
          - -c
          - |
            export KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://${POD_NAME}.kafka.kafka-demo.svc.cluster.local:9092
            /opt/bitnami/scripts/kafka/entrypoint.sh /opt/bitnami/scripts/kafka/run.sh
        volumeMounts:
          - name: datadir
            mountPath: /bitnami/kafka
      volumes:
        - name: datadir
          emptyDir: {}